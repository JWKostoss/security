briefly describe your application and what class concepts/algorithms you incorporated and why you feel the design you chose was well suited to the application functionality:

Our project was the imitation of the "Trojan Horse" attic used by cybercriminals. Trojan Horse can be defined as a type of malicious software disguised to be a legitimate program. Trojan horses are typically used as malicious software in the form of a virus. In our case we were able to disguise a component within a friendly application aimed at underprivileged residents. This application happens to be the project we are working on in CS 410: Software Engineering here at Central Connecticut. We implemented a couple of concepts from this class: authentication and protocols. Within authentication, we implemented the trojan horse tactic in form of a seamless bid to get the user to authenticate their email. Most applications with a user login requires all emails to be authenticated for security purposes. This can also be said with the topic of protocols. The user signs in with their email, the program wants a legitimate argument that said email is your email, luring the user to verify their email. We chose to implement these concepts primarily with the use of a trojan horse to create a way of manipulating the user. The average user would not suspect any harm in this process, especially from a app like such.